C:\Users\Chloe Quinto\Desktop\390\Lab 3\3.1.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Mon Mar 05 15:28:11 2018

    1:          =0000000F              N:      EQU     15 ; length of array
    2:          =000000FF              NFC:    EQU     $FF ; not-found code
    3:          =00000190              key:    EQU     $190
    4:          =0000000D              CR:     EQU     $0D ; ASCII return
    5:          =0000000A              LF:     EQU     $0A ; ASCII line feed
    6:                                 
    7:          =00005000                      ORG      $5000
    8:     5000 +0001                  result: DS.B    1 ;reserve a byte for result
    9:     5001 0D1A 00B5 039F         vecx:   DC.W    $D1A, $B5, $39F, $980, $E4F, $186, $E3, $319, $430
           5007 0980 0E4F 0186 
           500D 00E3 0319 0430 
   10:     5013 0004 0190 022C                 DC.W    $4, $190, $22C, $189, $A55, $30D
           5019 0189 0A55 030D 
   11:     501F 4B 65 79 20 66 6F      str1:   DC.B    "Key found", CR, LF, 0
           5025 75 6E 64 0D 0A 00 
   12:     502B 4B 65 79 20 6E 6F      str2:   DC.B    "Key not found", CR, LF, 0
           5031 74 20 66 6F 75 6E 
           5037 64 0D 0A 00 
   13:     503B 49 6E 64 65 78 20      str3:   DC.B    "Index = $", 0
           5041 3D 20 24 00 
   14:     5045 0D 0A 00               str4:   DC.B    CR, LF, 0
   15:                                 
   16:                                         
   17:          =00004000                      ORG     $4000
   18:     4000 C7                             clrb                    ;initialize index = 0
   19:     4001 180B FF 5000                   movb    #NFC, result    ; initialize search result
   20:     4006 CD 0190                        ldy     #key            ; set key we’re searching for
   21:     4009 CE 5001                        ldx     #vecx           ; set up X as pointer to array
   22:     400C B7 10                  loop:   tfr     B, A            ; copy index to A
   23:     400E 48                             lsla                    ; and multiply by 2 to give byte offset
   24:     400F AD E4                          cpy     A, X            ; compare key to array element
   25:     4011 27 0D                          beq     found           ; branch if element = key
   26:     4013 52                             incb                    ; if not – increment indexe
   27:     4014 C1 0F                          cmpb    #N              ; are we at the end of the array yet?
   28:     4016 26 F4                          bne     loop            ; no – go check next value
   29:     4018 CE 502B                        ldx     #str2           ; yes - we’re done without finding key
   30:     401B 16 403C                        jsr     putstr
   31:     401E 20 1B                          bra     done
   32:     4020 7B 5000                found:  stab    result          ; write index into result
   33:     4023 CE 501F                        ldx     #str1
   34:     4026 16 403C                        jsr     putstr
   35:     4029 CE 503B                        ldx     #str3
   36:     402C 16 403C                        jsr     putstr
   37:     402F B6 5000                        ldaa    result 
   38:     4032 16 404F                        jsr     puthx8  
   39:     4035 CE 5045                        ldx     #str4
   40:     4038 16 403C                        jsr     putstr
   41:                                         
   42:     403B 3F                     done:   swi                     ; return to monitor
   43:                                 
   44:          =000000CC              SCIOSR1: EQU    $00CC
   45:          =000000CF              SCIODRL: EQU    $00CF
   46:                                 
   47:     403C 36                     putstr: psha                    ;output null terminated string to terminal 
   48:     403D A6 30                  ploop:  ldaa    1, X+           ;X contains pointer to string
   49:     403F 27 05                          beq     pdone
   50:     4041 16 4048                        jsr     putc
   51:     4044 20 F7                          bra     ploop
   52:     4046 32                     pdone:  pula
   53:     4047 3D                             rts
   54:                                 
   55:     4048 4F CC 80 FC            putc:   brclr   SCIOSR1, $80, * ;output single character to terminal 
   56:     404C 5A CF                          staa    SCIODRL
   57:     404E 3D                             rts     
   58:     404F 36                     puthx8: psha                    ; output 8bit value in acc A as two hex digits
   59:     4050 44                             lsra
   60:     4051 44                             lsra
   61:     4052 44                             lsra
   62:     4053 44                             lsra
   63:     4054 16 405E                        jsr     puthx4  
   64:     4057 32                             pula
   65:     4058 84 0F                          anda     #$0F
   66:     405A 16 405E                        jsr     puthx4
   67:     405D 3D                             rts
   68:     405E 81 0A                  puthx4: cmpa    #$A     ; output 4-bit value in acc A as a hex character
   69:     4060 25 02                          blo     hxnum
   70:     4062 8B 07                          adda    #$7
   71:     4064 8B 30                  hxnum:  adda    #$30
   72:     4066 16 4048                        jsr     putc
   73:     4069 3D                             rts

Symbols:
cr                              *0000000d
done                            *0000403b
found                           *00004020
hxnum                           *00004064
key                             *00000190
lf                              *0000000a
loop                            *0000400c
n                               *0000000f
nfc                             *000000ff
pdone                           *00004046
ploop                           *0000403d
putc                            *00004048
puthx4                          *0000405e
puthx8                          *0000404f
putstr                          *0000403c
result                          *00005000
sciodrl                         *000000cf
sciosr1                         *000000cc
str1                            *0000501f
str2                            *0000502b
str3                            *0000503b
str4                            *00005045
vecx                            *00005001

